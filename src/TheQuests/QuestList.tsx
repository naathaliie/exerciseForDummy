/* Version 1
B√∂rja med att quests har id, beskrivning och en flagga f√∂r avklarad.

Vi ska ha ett antal of√§rdiga quests n√§r vi startar appen.

Man ska kunna toggla ett quest att vara avklarat eller inte. 
Det kan vara checkboxar man klickar i och ur, eller n√•gon annan design. 

Version 2
Man ska kunna l√§gga till nya quests i listan. L√§gg till ett inputf√§lt och en knapp.*/

import "./QuestList.scss";
import { useRef, useState } from "react";
import { Quest, initialQuests } from "../types/questTypes";
import uuid from "react-uuid";
//Skapar en typ(struktur) f√∂r hur varje quest ska se ut(inneh√•lla)

const QuestList = () => {
  //F√∂r att visa upp alla initialQuests (quests) och f√∂r att kunna √§ndra (setQuest)
  const [quests, setQuest] = useState(initialQuests);
  const qNameRef = useRef<HTMLInputElement>(null);
  const qDescRef = useRef<HTMLInputElement>(null);

  console.log("Quests: ", quests);

  //Vad som h√§nder n√§r man klickar p√• "l√§gg till"
  const addQuestHandler = () => {
    //Kollar om inputf√§lten f√•tt ett v√§rde
    if (qNameRef.current?.value && qDescRef.current?.value) {
      //Skapar det nya questet
      const newQuest: Quest = {
        id: uuid(),
        name: qNameRef.current.value,
        description: qDescRef.current.value,
        complete: false,
      };
      //Anropar setQuests() och √∂ppnar upp arrayen quests och efter , l√§gger till det nya questet
      setQuest([...quests, newQuest]);
      qNameRef.current.value = "";
      qDescRef.current.value = "";
    }
  };

  //Vad som h√§nder n√§r man klickar p√• delete
  const deleteQuestHandler = (id: string) => {
    console.log("Det klickade id:t = ", id);
    //Ta bort det klickade questet
    const sortedQuests = quests.filter((q) => {
      return q.id !== id;
    });

    setQuest(sortedQuests);
  };

  return (
    <div className="questListBox">
      <h1>The quests</h1>

      <section className="questSect">
        <section className="addQuestDiv">
          <p>Add new quest:</p>
          <label htmlFor="qName">Name</label>
          <input id="qName" type="text" ref={qNameRef} />
          <label htmlFor="qDesc">Description: </label>
          <input id="qDesc" type="text" ref={qDescRef} />
          <button onClick={addQuestHandler}>L√§gg till</button>
        </section>

        <section className="allQuestSect">
          <p>All the quests:</p>
          {quests.map((q) => {
            return (
              <ul key={q.id}>
                <li>Quest: {q.name}</li>
                <li>Description: {q.description}</li>
                {/* Span anv√§nds f√∂r att ge mer kontroll √∂ver utseendet (beh√•ller det precis som emojin ser ut) te.x en button hade √§ndrat p√• utseendet*/}
                <li>
                  Complete:{" "}
                  {q.complete ? (
                    <span
                      onClick={() => {
                        console.log("Du klickade p√• ibockad med id", q.id);
                        /* true ska bli false p√• det klickade questet */
                        setQuest(
                          quests.map((quest) => {
                            if (q.id === quest.id) {
                              return { ...q, complete: false };
                            } else {
                              return quest;
                            }
                          })
                        );
                      }}
                    >
                      ‚úÖ
                    </span>
                  ) : (
                    <span
                      onClick={() => {
                        /* false ska bli true p√• det klickade questet */
                        setQuest(
                          quests.map((quest) => {
                            if (q.id === quest.id) {
                              return { ...q, complete: true };
                            } else {
                              return quest;
                            }
                          })
                        );
                      }}
                    >
                      üü©
                    </span>
                  )}
                </li>
                <button
                  className="deleteBtn"
                  onClick={() => {
                    deleteQuestHandler(q.id);
                  }}
                >
                  Delete
                </button>
              </ul>
            );
          })}
        </section>
      </section>
    </div>
  );
};

export default QuestList;
